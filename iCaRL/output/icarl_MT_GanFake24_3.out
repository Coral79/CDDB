----------------- Options ---------------
               add_binary: False                         
               batch_size: 32                            	[default: 64]
                   binary: False                         
                blur_prob: 0                             
                 blur_sig: 0.5                           
          checkpoints_dir: /scratch_net/kringel/chuqli/CNNDetection/checkpoints	[default: ./checkpoints]
                class_bal: False                         
           continue_train: False                         
                 cropSize: 224                           
                 data_aug: False                         
                 dataroot: /srv/beegfs02/scratch/generative_modeling/data/Deepfake/DoGAN_data/new/GanFake	[default: /srv/beegfs02/scratch/generative_modeling/data/Deepfake/Adam-NSCL]
          earlystop_epoch: 5                             
                    epoch: latest                        
                 fine_tun: False                         
                    gpuid: [1]                           
                init_gain: 0.02                          
                  init_lr: 0.001                         	[default: 0.0005]
                init_type: normal                        
                  isTrain: True                          	[default: None]
               jpg_method: cv2                           
                 jpg_prob: 0                             
                 jpg_qual: 75                            
                 loadSize: 256                           
                     mode: binary                        
               model_name: resnet18                      
               model_type: resnet                        
            model_weights: None                          
               multiclass: [1, 1, 0]                     	[default: [1]]
                     name: icarl_ganfake                 	[default: experiment_name]
                  no_flip: False                         
              num_classes: 2                             
               num_epochs: 24                            	[default: 12]
              num_threads: 4                             
                  outfile: temp_0.1.csv                  
            pretrain_name:                               
           resize_or_crop: scale_and_crop                
                rz_interp: bilinear                      
          save_epoch_freq: 20                            
         save_latest_freq: 2000                          
                 schedule: [8, 16, 24]                   	[default: [10]]
           serial_batches: False                         
                   suffix:                               
                task_name: cyclegan,progan256,progan1024 	[default: ]
              train_split: train                         
                val_split: val                           
----------------- End -------------------
{'All': 6}
Task order: ['cyclegan', 'progan256', 'progan1024']
Traceback (most recent call last):
  File "main_icarl_CNND.py", line 553, in <module>
    main()
  File "main_icarl_CNND.py", line 173, in main
    model = Model_CNND(class_num, args)
  File "/home/chuqli/icarl-pytorch/CNND_model.py", line 56, in __init__
    self.model = resnet50(pretrained=True)
  File "/home/chuqli/icarl-pytorch/models/resnet_CNND.py", line 252, in resnet50
    model.load_state_dict(model_zoo.load_url(model_urls['resnet50']))
  File "/scratch_net/kringel/chuqli/conda_envs/icarl_pytorch/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1051, in load_state_dict
    raise RuntimeError('Error(s) in loading state_dict for {}:\n\t{}'.format(
RuntimeError: Error(s) in loading state_dict for ResNet:
	size mismatch for fc.weight: copying a param with shape torch.Size([1000, 2048]) from checkpoint, the shape in current model is torch.Size([1, 2048]).
	size mismatch for fc.bias: copying a param with shape torch.Size([1000]) from checkpoint, the shape in current model is torch.Size([1]).
----------------- Options ---------------
               add_binary: True                          	[default: False]
               batch_size: 32                            	[default: 64]
                   binary: False                         
                blur_prob: 0                             
                 blur_sig: 0.5                           
          checkpoints_dir: /scratch_net/kringel/chuqli/CNNDetection/checkpoints	[default: ./checkpoints]
                class_bal: False                         
           continue_train: False                         
                 cropSize: 224                           
                 data_aug: False                         
                 dataroot: /srv/beegfs02/scratch/generative_modeling/data/Deepfake/DoGAN_data/new/GanFake	[default: /srv/beegfs02/scratch/generative_modeling/data/Deepfake/Adam-NSCL]
          earlystop_epoch: 5                             
                    epoch: latest                        
                 fine_tun: False                         
                    gpuid: [1]                           
                init_gain: 0.02                          
                  init_lr: 0.001                         	[default: 0.0005]
                init_type: normal                        
                  isTrain: True                          	[default: None]
               jpg_method: cv2                           
                 jpg_prob: 0                             
                 jpg_qual: 75                            
                 loadSize: 256                           
                     mode: binary                        
               model_name: resnet18                      
               model_type: resnet                        
            model_weights: None                          
               multiclass: [1, 1, 0]                     	[default: [1]]
                     name: icarl_ganfake_bin             	[default: experiment_name]
                  no_flip: False                         
              num_classes: 2                             
               num_epochs: 24                            	[default: 12]
              num_threads: 4                             
                  outfile: temp_0.1.csv                  
            pretrain_name:                               
           resize_or_crop: scale_and_crop                
                rz_interp: bilinear                      
          save_epoch_freq: 20                            
         save_latest_freq: 2000                          
                 schedule: [8, 16, 24]                   	[default: [10]]
           serial_batches: False                         
                   suffix:                               
                task_name: cyclegan,progan256,progan1024 	[default: ]
              train_split: train                         
                val_split: val                           
----------------- End -------------------
{'All': 6}
Task order: ['cyclegan', 'progan256', 'progan1024']
Traceback (most recent call last):
  File "main_icarl_CNND.py", line 553, in <module>
    main()
  File "main_icarl_CNND.py", line 173, in main
    model = Model_CNND(class_num, args)
  File "/home/chuqli/icarl-pytorch/CNND_model.py", line 56, in __init__
    self.model = resnet50(pretrained=True)
  File "/home/chuqli/icarl-pytorch/models/resnet_CNND.py", line 252, in resnet50
    model.load_state_dict(model_zoo.load_url(model_urls['resnet50']))
  File "/scratch_net/kringel/chuqli/conda_envs/icarl_pytorch/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1051, in load_state_dict
    raise RuntimeError('Error(s) in loading state_dict for {}:\n\t{}'.format(
RuntimeError: Error(s) in loading state_dict for ResNet:
	size mismatch for fc.weight: copying a param with shape torch.Size([1000, 2048]) from checkpoint, the shape in current model is torch.Size([1, 2048]).
	size mismatch for fc.bias: copying a param with shape torch.Size([1000]) from checkpoint, the shape in current model is torch.Size([1]).
